Program:
//File Car.java
public interface Car
{
public void buildCar();

}
//File Hatchback.java
public class Hatchback implements Car

{
public void buildCar()
{
System.out.printIn("Hatchback car build process complete");
}
//File Sedan.java
public class Sedan implements Car
{
public void buildCar()
{
System.out.printIn("Sedan car build process complete");
}
//File SUV.java
public class SUV implements Car
{
public void buildCar()
{

System.out.printIn("SUV build process complete");

}

//File CarAssembler.java
public class CarAssembler

{
public void buildCar(Car carType)

{
carType. buildCar();
}
//File CarFactory.java
public class CarFactory

{
public Car getCar(String carType)

Car car=null;

CarAssembler assembler = new CarAssembler();

if(carType.compareTolIgnoreCase("Hatchback")==0)
{

car = new Hatchback();
assembler.buildCar(car);

}

if(carType.compareTolIgnoreCase("Sedan")==0)

{
car = new Sedan();
assembler. buildCar(car);

if(carType.compareTolIgnoreCase("SUV")==0)
{

car = new SUV();
assembler.buildCar(car);

}

return Car;
}
}
//File TestFactory.java
public class TestFactory

{
public static void main(String [Jargs)
{
CarFactory factory =new CarFactory();
SUV suv = (SUV) factory.getCar("SUV");
Sedan se = (Sedan) factory.getCar("Sedan");
Hatchback hb = (Hatchback) factory.getCar("Hatchback");
}
}

Conclusion: In this experiment we implemented OOP concepts in java.
